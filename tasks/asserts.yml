---
- name: mysql_databases
  block:
    - name: Ensure mysql_databases is iterable.
      ansible.builtin.assert:
        that: "mysql_databases is iterable"
        fail_msg: "mysql_databases must be an iterable."
        quiet: yes

    - name: Ensure mysql_databases is correctly defined.
      ansible.builtin.assert:
        that: item.name is defined
        fail_msg: "Items in mysql_databases must have key name."
        quiet: yes
      loop: "{{ mysql_databases }}"
      when: mysql_databases != []

- name: Ensure mysql_db_admin_password_update is a boolean.
  ansible.builtin.assert:
    that: "mysql_db_admin_password_update is boolean"
    fail_msg: "mysql_db_admin_password_update must be a boolean."
    quiet: yes

- name: Ensure mysql_db_admin_password is defined.
  ansible.builtin.assert:
    that: "__mysql_db_admin_password is defined"
    fail_msg: "Defining mysql_db_admin_password is mandatory."
    quiet: yes

- name: Ensure mysql_provider is correctly defined.
  ansible.builtin.assert:
    that: "mysql_provider in __mysql_providers"
    fail_msg: "mysql_provider must be either mysql or mariadb, not {{ mysql_provider }}."
    quiet: yes

- name: mysql_users
  block:
    - name: Ensure mysql_users is iterable.
      ansible.builtin.assert:
        that: "mysql_users is iterable"
        fail_msg: "mysql_users must be an iterable."
        quiet: yes

    - name: Ensure mysql_users is correctly defined.
      ansible.builtin.assert:
        that:
          - item.name is defined
          - item.password is defined
        fail_msg: "Items in mysql_users must have keys name and password."
        quiet: yes
      loop: "{{ mysql_users }}"
      when: mysql_users != []
      ignore_errors: yes
      no_log: yes
      register: __error

    - name: Print the otherwise hidden error when mysql_users is incorrect.
      fail:
        msg: "{{ (__error.results | selectattr('failed') | list | first).msg }}"
      when:
        - __error.failed is defined
        - __error.failed
